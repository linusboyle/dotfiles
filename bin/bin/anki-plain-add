#!/usr/bin/env python3
# encoding: utf-8
# Author: Zhilei Han <hzl17@mails.tsinghua.edu.cn> 

import json
import urllib.request
import sys
import notify2

def request(action, **params):
    return {'action': action, 'params': params, 'version': 6}

def invoke(action, **params):
    requestJson = json.dumps(request(action, **params)).encode('utf-8')
    response = json.load(urllib.request.urlopen(urllib.request.Request('http://localhost:8765', requestJson)))
    if len(response) != 2:
        raise Exception('response has an unexpected number of fields')
    if 'error' not in response:
        raise Exception('response is missing required error field')
    if 'result' not in response:
        raise Exception('response is missing required result field')
    if response['error'] is not None:
        raise Exception(response['error'])
    return response['result']

def NoteContent(Name):
    Name=Name.replace('"','\\"')
    Name=Name.replace(u'\xa0',u' ')
    newnote="""
    {
        "deckName": "English Vocabulary",
        "modelName": "PlainWithComment",
        "fields": {
            "Name": "%s",
            "Comment": ""
        },
        "options": {
            "allowDuplicate": false
        },
        "tags": [ ]
    }
    """ % Name

    return newnote

def notify_send(title, msg):
    n = notify2.Notification(title, msg)
    n.show()

if __name__ == "__main__":
    notify2.init("anki-plain-add")
    if len(sys.argv) <= 1:
        notify_send("Failure", "usage: {} word" % sys.argv[0])
        exit(2)
    name = sys.argv[1]
    raw = NoteContent(name)
    # print(raw)
    note = json.loads(raw, strict=False)
    try:
        result = invoke('addNote', note=note)
        notify_send("Success", "card successfully added")
    except:
        # failure
        notify_send("Failure", "Exception")
